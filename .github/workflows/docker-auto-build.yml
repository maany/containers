name: docker-auto-build

on:
  push:
    branches:
      - '!*'
    tags:
      - '!*'
  release: 
    types: [created]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        context_dir: ['clients', 'server', 'daemons']
      fail-fast: false
    
    steps:      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Checkout the containers repository
        uses: actions/checkout@v2
        
      - name: Get the new Release Tag
        id: release
        shell: bash
        run: | 
          GIT_TAG=$(echo $(git describe --tags --abbrev=0))
          IMAGE_NAME=$(echo '${{ github.repository_owner }}/rucio-${{ matrix.context_dir }}:release'-$GIT_TAG)
          echo ::set-output name=tag::$GIT_TAG
          echo ::set-output name=image::$IMAGE_NAME
          echo $IMAGE_NAME
      
      - name: Prepare Docker Image name
        shell: bash
        run: |
          echo '${{ steps.release.outputs.image }}'
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.context_dir }}
          push: true
          tags: '${{ steps.release.outputs.image }}'
          build-args: TAG=${{ steps.release.outputs.tag }}
